# Infrastructure as Code (IaC) Pipeline
# Terraform validation, planning, and deployment

name: Infrastructure

on:
  push:
    branches: ['main']
    paths:
      - 'iac/**'
      - '.github/workflows/iac.yml'
  pull_request:
    branches: ['main']
    paths:
      - 'iac/**'
      - '.github/workflows/iac.yml'
  workflow_dispatch:

env:
  TERRAFORM_VERSION: '1.6'
  WORKING_DIRECTORY: './iac'

jobs:
###############################################################################
# 1. Terraform Validate & Plan
###############################################################################
  validate:
    name: Validate & Plan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    
    # Global environment variables for all steps
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}


      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="resource_group_name=${{ secrets.TF_BACKEND_RESOURCE_GROUP }}" \
            -backend-config="storage_account_name=${{ secrets.TF_BACKEND_STORAGE_ACCOUNT }}" \
            -backend-config="container_name=${{ secrets.TF_BACKEND_CONTAINER_NAME }}" \
            -backend-config="key=terraform.tfstate"

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        env:
          TF_VAR_resource_group_name: ${{ secrets.TF_BACKEND_RESOURCE_GROUP }}
          TF_VAR_storage_account_name: ${{ secrets.TF_BACKEND_STORAGE_ACCOUNT }}
          TF_VAR_container_name: ${{ secrets.TF_BACKEND_CONTAINER_NAME }}
        run: |
          terraform plan \
            -var="location=${{ vars.AZURE_LOCATION || 'polandcentral' }}" \
            -var="environment=${{ vars.ENVIRONMENT || 'dev' }}" \
            -out=tfplan

      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: ${{ env.WORKING_DIRECTORY }}/tfplan
          retention-days: 30

###############################################################################
# 2. Terraform Apply (main branch only)
###############################################################################
  apply:
    name: Apply Changes
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production  # Requires manual approval in GitHub
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    

    # Global environment variables for all steps
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan
          path: ${{ env.WORKING_DIRECTORY }}

      - name: Terraform Init
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: |
          terraform init \
            -backend-config="resource_group_name=${{ secrets.TF_BACKEND_RESOURCE_GROUP }}" \
            -backend-config="storage_account_name=${{ secrets.TF_BACKEND_STORAGE_ACCOUNT }}" \
            -backend-config="container_name=${{ secrets.TF_BACKEND_CONTAINER_NAME }}" \
            -backend-config="key=terraform.tfstate"

      - name: Terraform Apply
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: terraform apply tfplan

###############################################################################
# 3. Security Scanning
###############################################################################
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: validate
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Init
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: |
          terraform init \
            -backend-config="resource_group_name=${{ secrets.TF_BACKEND_RESOURCE_GROUP }}" \
            -backend-config="storage_account_name=${{ secrets.TF_BACKEND_STORAGE_ACCOUNT }}" \
            -backend-config="container_name=${{ secrets.TF_BACKEND_CONTAINER_NAME }}" \
            -backend-config="key=terraform.tfstate"

      - name: Run Checkov (Terraform Security Scanner)
        uses: bridgecrewio/checkov-action@master
        with:
          directory: ${{ env.WORKING_DIRECTORY }}
          framework: terraform
          output_format: sarif
          output_file_path: reports/results.sarif
          soft_fail: true  # Don't fail the build on security issues

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: reports/results.sarif
